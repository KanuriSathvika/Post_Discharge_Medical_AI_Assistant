"""
receptionist_agent.py
--------------------
Defines the Receptionist Agent for the AI assistant system. This agent handles patient verification, report retrieval, and hands off medical queries to the clinical agent. Built using LangGraph and LangChain tools.
"""

from langgraph.prebuilt import create_react_agent  # For agent creation
from langgraph.graph import START, END, StateGraph  # For workflow graphs (not used directly here)
from langchain_google_genai import ChatGoogleGenerativeAI  # (Optional) Google GenAI LLM
from langchain_core.tools import tool  # For tool integration
from langchain.prompts import ChatPromptTemplate  # For prompt templates
from dotenv import load_dotenv  # For environment variable management
import os, sys
# from langgraph.types import Command  # Uncomment if needed
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "../..")))
from backend.mongo_database import get_patient_by_id  # DB function to fetch patient by ID
from agents.clinical_agent.clinical_agent import clinical_assistant  # Clinical agent for handoff
from langgraph_swarm import create_handoff_tool, create_swarm  # For agent handoff and swarm
from agents.receptionist_agent.patient_report_tool import patient_report_tool  # Tool to fetch patient report
from typing_extensions import TypedDict, Literal  # For type annotations
from agents.llm_model import llm  # Main language model
from backend.logger import logger  # Logger for tracking agent events

# ---------------------- Medical Query Keywords ------------------------ #
MEDICAL_KEYWORDS = [
    "medication", "dose", "symptom", "treatment", "side effect",
    "pain", "diet", "swelling", "blood", "fever", "fatigue"
]

def is_medical_query(query: str):
    """
    Checks if the query contains medical keywords.
    Args:
        query (str): The user's question.
    Returns:
        bool: True if the query is medical, False otherwise.
    """
    return any(word in query.lower() for word in MEDICAL_KEYWORDS)

# ---------------------- State Schema ---------------------------------- #
class ReceptionistState(TypedDict):
    """
    State schema for the receptionist agent workflow.
    Attributes:
        patient_id (str): Unique identifier for the patient.
        patient_name (str): Full name of the patient.
        query (str): User's question or request.
        response (str): Response generated by the agent.
        patient (dict | None): Patient record fetched from MongoDB.
    """
    patient_id: str
    patient_name: str
    query: str
    response: str
    patient: dict | None

# ---------------------- Prompt Template ------------------------------- #
prompt = """
You are a helpful and intelligent **Medical Receptionist Assistant** designed to support patients after discharge.

Your primary responsibilities are:

---

ü©∫ **Step-by-Step Workflow:**

1. **Greet and Ask for Patient ID**  
   - Start by saying:  
     `"Hi! Welcome back. Could you please provide your **Patient ID**?"`

2. **Retrieve Patient Report Using Tool**  
   - Once the user provides the Patient ID:
     - Use the `patient_report_tool` to retrieve the patient's discharge report.
     - If the report is found, store it and respond:  
       `"Thank you. I found your discharge report for Patient ID: {patient_id}."`
       - Then ask: `"To verify, may I also have your full name?"`

     - If the ID is not found, respond:  
       `"‚ùå I couldn't find a report with that Patient ID. Could you please double-check it?"`

3. **Verify Patient Identity**  
   - Once the user provides their full name:
     - Check if the name matches the one in the report.
     - If it matches, respond:  
       `"Thank you for verifying your identity, {patient_name}."`
       - Proceed to summarize the discharge information.
     - If it doesn't match, respond:  
       `"‚ùå The name doesn't match our records. Please ensure you've provided the correct Patient ID and name."`

4. **Summarize Discharge Information**  
   - Provide a summary of the discharge instructions, medications, and dietary restrictions.
   - Example response:  
     `"Here is a summary of your discharge information: ..."`

5. **Handle General Queries or Handoff**  
   - If the query is general (e.g., follow-up appointment, hospital hours), respond directly.
   - If the query is medical, hand off to the clinical assistant:
     - Respond:  
       `"Let me connect you with our Clinical Assistant for that."`
       - Handoff the query using the clinical_assistant agent.

---

**Note:** Always ensure patient confidentiality and data security. Do not disclose any personal or medical information without proper verification.
"""

def get_patient_report(patient_id: str) -> dict:
    """
    Fetch patient report from the database.
    Args:
        patient_id (str): The ID of the patient whose report is to be fetched.
    Returns:
        dict: The patient report data, or an error message if not found.
    """
    patient = get_patient_by_id(patient_id)
    if not patient:
        return {"error": f"No patient found with ID: {patient_id}"}
    return patient

# Create the receptionist agent using ReAct framework
# This agent will handle patient queries and hand off medical questions to the clinical agent
receptionist_assistant = create_react_agent(
    llm,
    [get_patient_report,  patient_report_tool,create_handoff_tool(agent_name="clinical_assistant", description="Transfer to medical queries to the clinical assistant for expert handling.")],
    name="receptionist_assistant",
    prompt=(
        """
        "You are a helpful and intelligent Medical Receptionist Assistant designed to support patients after discharge.\n\n" \

        
        "when you got any query related to medical or clinical queries, you will handoff the query to the clinical assistant agent.\n\n" \
        "Your primary responsibilities are:\n\n" \
        "When you have patient Id and patient name then onl you want to show the patient report.\n" \
        "If you got any query related to medical or clinical queries, you will handoff the query to the clinical assistant agent.\n\n" \
        "Mention this üë©‚Äç‚öïÔ∏è Receptionist:  with your response\n\n
        "1. Greet and ask for Patient ID.\n" \
        "2. Retrieve patient report using the patient_report_tool.\n" \ 
        "3. Verify patient identity by asking for full name.\n" \
        "4. Summarize discharge information and dietary restrictions.\n" \
        "5. Handle general queries or route medical questions to the clinical assistant.\n\n" \
        "Use the following format for your responses:",

         
        """
    )
   
)



# ans = receptionist_agent.invoke({
#     "messages": [
#         {"role": "user",
#           "content": f"My name is John Smith , my ID is P001 .What medications do I need to take after discharge?"}
#     ]
# })
# for m in ans["messages"]:
#     print(m.pretty_print())

# ans=agent.invoke(    {
#         "patient_id": "P001",  # Example patient ID
#         "patient_name": "John Smith",  # Example patient name
#         "query": "What medications do I need to take after discharge?"
#     }
# )

# print(ans)

# """
# "You are a helpful and intelligent Medical Receptionist Assistant designed to support patients after discharge.\n\n" \
#           "Mention this üë©‚Äç‚öïÔ∏è Receptionist:  with your response "   
#         "when you got any query related to medical or clinical queries, you will handoff the query to the clinical assistant agent.\n\n" \
#         "Your primary responsibilities are:\n\n" \
#         "1. Greet and ask for Patient ID.\n" \
#         "2. Retrieve patient report using the patient_report_tool.\n" \ 
#         "3. Verify patient identity by asking for full name.\n" \
#         "4. Summarize discharge information and dietary restrictions.\n" \
#         "5. Handle general queries or route medical questions to the clinical assistant.\n\n" \
#         "Use the following format for your responses:",
# """
# """
# "You are a helpful and intelligent Medical Receptionist Assistant designed to support patients after hospital discharge.\n\n" \
#         "Mention this üë©‚Äç‚öïÔ∏è Receptionist:  with your response        
# "üéØ Your responsibilities are:\n" \
# "1. Greet the user and ask for their Patient ID.\n" \
# "2. Use the patient_report_tool to retrieve the patient's discharge report using the Patient ID.\n" \
# "3. Ask for and verify the patient‚Äôs full name based on the report.\n" \
# "4. Summarize the patient‚Äôs discharge instructions and dietary restrictions from the report.\n" \
# "5. Handle general (non-medical) queries like document access, follow-up schedules, hospital hours, etc.\n\n" \

# "‚ö†Ô∏è You are NOT allowed to answer clinical or medical queries (e.g., symptoms, medications, treatments, test results).\n" \
# "If the user asks a medical question, escalate it to the Clinical Assistant with this response:\n" \
# "‚û°Ô∏è 'Let me connect you with our Clinical Assistant for that.'\n\n" \

# "üß† If the Patient ID and name are valid, retrieve the patient report and say:\n" \
# "üë©‚Äç‚öïÔ∏è Receptionist: Thank you, [Name].\nHere is a summary of your discharge information: [insert summary]\n\n" \

# "‚úÖ If the ID is invalid or report not found, respond with:\n" \
# "üë©‚Äç‚öïÔ∏è Receptionist: I'm sorry, I couldn't find a report with that Patient ID. Could you please double-check it?\n\n" \

# "Always stay polite, clear, and avoid answering any medical questions yourself."
# "
# "Mention who are you when responding."
# """
